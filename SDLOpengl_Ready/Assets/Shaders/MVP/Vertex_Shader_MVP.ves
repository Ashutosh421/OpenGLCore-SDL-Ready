#version 430 core

layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 vertColor;
layout( location = 2 ) in vec3 normal;
layout( location = 3 ) in vec2 uv;

//Uniforms
layout( location = 0 ) uniform mat4 modelMatrix;
layout( location = 1 ) uniform mat4 viewMatrix;
layout( location = 2 ) uniform mat4 projectionMatrix;

uniform struct TextureTile
{
	float x;
	float y;
}textureTile;

uniform float timer;

out VERT_OUT
{
	vec4 fragPos;
	vec4 vColor;
	vec4 normal;
	vec2 uv;
}vert_out;

void main(){	
	gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position , 1.0f);

	vert_out.vColor =  vec4(sin(timer), cos(timer), sin(timer + 0.5f) , 1.0f);		
	vert_out.normal =  vec4(mat3(transpose(inverse(modelMatrix))) * normal , 0.0);
	vert_out.uv = vec2(uv.x * textureTile.x , uv.y * textureTile.y);
	vert_out.fragPos = modelMatrix * vec4(position.xyz , 1.0f);
}

